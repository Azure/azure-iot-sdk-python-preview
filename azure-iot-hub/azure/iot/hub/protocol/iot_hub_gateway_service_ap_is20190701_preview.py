# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Configuration, Serializer, Deserializer
from .version import VERSION
from msrest.exceptions import HttpOperationError
from .operations.service_operations import ServiceOperations
from .operations.digital_twin_operations import DigitalTwinOperations
from . import models


class IotHubGatewayServiceAPIs20190701PreviewConfiguration(Configuration):
    """Configuration for IotHubGatewayServiceAPIs20190701Preview
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Subscription credentials which uniquely identify
     client subscription.
    :type credentials: None
    :param str base_url: Service URL
    """

    def __init__(self, credentials, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if not base_url:
            base_url = "https://fully-qualified-iothubname.azure-devices.net"

        super(IotHubGatewayServiceAPIs20190701PreviewConfiguration, self).__init__(base_url)

        self.add_user_agent("iothubgatewayserviceapis20190701preview/{}".format(VERSION))

        self.credentials = credentials


class IotHubGatewayServiceAPIs20190701Preview(SDKClient):
    """IotHubGatewayServiceAPIs20190701Preview

    :ivar config: Configuration for client.
    :vartype config: IotHubGatewayServiceAPIs20190701PreviewConfiguration

    :ivar service: Service operations
    :vartype service: protocol.operations.ServiceOperations
    :ivar digital_twin: DigitalTwin operations
    :vartype digital_twin: protocol.operations.DigitalTwinOperations

    :param credentials: Subscription credentials which uniquely identify
     client subscription.
    :type credentials: None
    :param str base_url: Service URL
    """

    def __init__(self, credentials, base_url=None):

        self.config = IotHubGatewayServiceAPIs20190701PreviewConfiguration(credentials, base_url)
        super(IotHubGatewayServiceAPIs20190701Preview, self).__init__(
            self.config.credentials, self.config
        )

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = "2019-07-01-preview"
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.service = ServiceOperations(
            self._client, self.config, self._serialize, self._deserialize
        )
        self.digital_twin = DigitalTwinOperations(
            self._client, self.config, self._serialize, self._deserialize
        )
